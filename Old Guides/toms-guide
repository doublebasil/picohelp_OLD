C SDK datasheet
https://datasheets.raspberrypi.org/pico/raspberry-pi-pico-c-sdk.pdf

Other Pico datasheets
https://datasheets.raspberrypi.org/pico/getting-started-with-pico.pdf
https://datasheets.raspberrypi.org/pico/pico-datasheet.pdf

---

To build a pico project, I:
 - Create a folder called build (if there isn't one already)
 - Open terminal in the build folder
 - Run this command (notice the two dots): cmake ..
 - Run the make command (no dots): make
The binaries will be made in the build folder

To upload the project to the pico, first put it in bootloader mode,
then drag the .uf2 file created in the build folder

Instead of dragging you can use the copy command:
cp yourFile.uf2 /media/$USER/RPI-RP2

---

If you want to use a Hardware API (which you will), you need to both
#include the api in the c/cpp file, and update target_link_libraries()
in the CMakeLists.txt. You will #include a slightly different thing to
what you will be adding to target_link_libraries(), here are a few
examples:

#include            target_link_libraries()

"hardware/gpio.h"   hardware_gpio
"hardware/adc.h"    hardware_adc

etc.

---

To view Serial output from the pico, you can use this console command:

minicom -b 115200 -o -D /dev/ttyACM0

If that doensn't work, try ttyACM1 etc.

If you want to know how to use minicom, press ctrl+a, then press z
without pressing ctrl. To exit minicom, use crtl+a then press x

---

